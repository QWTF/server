void () SUB_CalcMoveDone;
void () SUB_CalcAngleMoveDone;
void () SUB_Null;
void () SUB_UseTargets;
void () SUB_Remove;
void(float normal) SUB_AttackFinished;

void (entity targ,entity inflictor,entity attacker,float damage) T_Damage;
float (entity e,float healamount,float ignore) T_Heal;
float (entity targ,entity inflictor) CanDamage;
.float playerclass;
.float nextpc;
.float last_impulse;
.float armorclass;
.float tf_items;
.float tf_items_flags;
.float no_grenades_1;
.float no_grenades_2;
.string client;
.string clientv;
.float stats_on;
.float autoid;
.float autodiscard;
.float discard_max;
.float bugger;
.vector oldangle;
.vector cam_origin;
.float active_grenades_1;
.float active_grenades_2;
.float tp_grenades_1;
.float tp_grenades_2;
.float got_aliases;
.float cheat_check;
.float is_removed;
.float is_undercover;
.float is_building;
.float is_detpacking;
.float is_feigning;
.float is_unabletospy;
.float has_disconnected;
.float has_dispenser;
.float has_sentry;
.float has_holo;
//.float shieldOn;
.float tfstate;
.entity linked_list;
.entity observer_list;
.float maxammo_shells;
.float maxammo_nails;
.float maxammo_cells;
.float maxammo_rockets;
.float items_allowed;
.float armor_allowed;
.float maxarmor;
.float maxspeed;
.float weaponmode;
.float motd;
.float current_menu;
.float menu_count;
.float menu_displaytime;
float toggleflags /* = 0.000000 */;
float respawn_delay_time /* = 0.000000 */;
float number_of_teams /* = 0.000000 */;
float illegalclasses /* = 0.000000 */;
float illegalclasses1 /* = 0.000000 */;
float illegalclasses2 /* = 0.000000 */;
float illegalclasses3 /* = 0.000000 */;
float illegalclasses4 /* = 0.000000 */;
float civilianteams /* = 0.000000 */;
float team1col /* = 0.000000 */;
float team2col /* = 0.000000 */;
float team3col /* = 0.000000 */;
float team4col /* = 0.000000 */;
float team1score /* = 0.000000 */;
float team2score /* = 0.000000 */;
float team3score /* = 0.000000 */;
float team4score /* = 0.000000 */;
float team1lives /* = 0.000000 */;
float team2lives /* = 0.000000 */;
float team3lives /* = 0.000000 */;
float team4lives /* = 0.000000 */;
float team1maxplayers /* = 0.000000 */;
float team2maxplayers /* = 0.000000 */;
float team3maxplayers /* = 0.000000 */;
float team4maxplayers /* = 0.000000 */;
float team1advantage /* = 0.000000 */;
float team2advantage /* = 0.000000 */;
float team3advantage /* = 0.000000 */;
float team4advantage /* = 0.000000 */;
.float team_no;
.float lives;
.float infection_team_no;
float CTF_Map;
float coop /* = 0.000000 */;
float rj /* = 0.000000 */;
entity pointer_prematchtimer;
entity pointer_timeleft;
float TF_FLARE_LIT    = 0.000000;
float TF_FLARE_OFF    = 1;
.entity building;
.float building_wait;
.entity real_owner;
.float real_frags;
.float respawn_time;
.float suicide_time;
.float weapons_carried;
.float current_weapon;
.float ammo_medikit;
.float maxammo_medikit;
.float ammo_detpack;
.float maxammo_detpack;
.float reload_shotgun;
.float reload_super_shotgun;
.float reload_grenade_launcher;
.float reload_rocket_launcher;
.float heat;
.float immune_to_check;
.float last_saveme_sound;
.float goal_no;
.float group_no;
.float goal_state;
.float owned_by;
.float goal_activation;
.float goal_effects;
.float goal_result;
.float goal_group;
.float else_goal;
.float if_goal_is_active;
.float if_goal_is_inactive;
.float if_goal_is_removed;
.float if_group_is_active;
.float if_group_is_inactive;
.float if_group_is_removed;
.float activate_goal_no;
.float inactivate_goal_no;
.float remove_goal_no;
.float restore_goal_no;
.float activate_group_no;
.float inactivate_group_no;
.float remove_group_no;
.float restore_group_no;
.float has_item_from_group;
.float remove_item_group;
.float return_item_no;
.float if_item_has_moved;
.float if_item_hasnt_moved;
.float remove_spawnpoint;
.float restore_spawnpoint;
.float remove_spawngroup;
.float restore_spawngroup;
.float display_item_status1;
.float display_item_status2;
.float display_item_status3;
.float display_item_status4;
.string team_str_home;
.string team_str_moved;
.string team_str_carried;
.string non_team_str_home;
.string non_team_str_moved;
.string non_team_str_carried;
.float ex_skill_min;
.float ex_skill_max;
.float increase_team1;
.float increase_team2;
.float increase_team3;
.float increase_team4;
.string broadcast;
.string team_broadcast;
.string non_team_broadcast;
.string owners_team_broadcast;
.string netname_broadcast;
.string netname_team_broadcast;
.string netname_non_team_broadcast;
.string netname_owners_team_broadcast;
.string team_drop;
.string non_team_drop;
.string netname_team_drop;
.string netname_non_team_drop;
string team_menu_string /* = "" */;
.float all_active;
.float item_list;
float item_list_bit /* = 0.000000 */;
.float delay_time;
.float dont_do_triggerwork;
.float g_a;
.float g_e;
.string t_s_h;
.string t_s_m;
.string t_s_c;
.string n_s_h;
.string n_s_m;
.string n_s_c;
.string b_b;
.string b_t;
.string b_n;
.string b_o;
.string n_b;
.string n_t;
.string n_n;
.string n_o;
.string d_t;
.string d_n;
.string d_n_t;
.string d_n_n;
float num_world_flames /* = 0.000000 */;
.float numflames;
.string flame_id;
float num_world_pipebombs /* = 0.000000 */;
float num_team_pipebombs_1 /* = 0.000000 */;
float num_team_pipebombs_2 /* = 0.000000 */;
float num_team_pipebombs_3 /* = 0.000000 */;
float num_team_pipebombs_4 /* = 0.000000 */;
float num_world_ammoboxes /* = 0.000000 */;
float num_team_ammoboxes_1 /* = 0.000000 */;
float num_team_ammoboxes_2 /* = 0.000000 */;
float num_team_ammoboxes_3 /* = 0.000000 */;
float num_team_ammoboxes_4 /* = 0.000000 */;
.float undercover_team;
.float undercover_skin;
.string undercover_name;
float spy_off /* = 0.000000 */;
float invis_only /* = 0.000000 */;
float allow_hook /* = 0.000000 */;
.float hook_out;
float live_camera /* = 0.000000 */;
.float camdist;
.vector camangle;
.entity camera_list;
float already_chosen_map /* = 0.000000 */;
.entity hook;
.float on_hook;
.float fire_held_down;
.vector head_shot_vector;
.float leg_damage;
.float FlashTime;
.float StatusRefreshTime;
.float StatusBarSize;
.float StatusBarRes;
.float gender;
float deathmsg /* = 0.000000 */;

void(float psize, entity p) KickPlayer = 
{
	msg_entity = p;
	if (psize > -3)
	{
		WriteByte(1, 34);
	}
	else
	{
		WriteByte(1, 35);
	}
};

void() muzzleflash = 
{
	WriteByte(4, 39);
	WriteEntity(4, self);
	multicast(self.origin, 2);
};




